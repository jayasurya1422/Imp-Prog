Given below is a binary tree. The task is to print the top view of binary tree. Top view of a binary tree is the set of nodes visible when the tree is viewed from the top. For the given below tree

       1
    /     \
   2       3
  /  \    /   \
4    5  6   7

Top view will be: 4 2 1 3 7



class Solution {
    static class pair{
        Node node;
        int ind;
        pair(Node node,int ind){
            this.node=node;
            this.ind=ind;
        }
    }
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    static ArrayList<Integer> topView(Node root) {
        // add your code
        Queue<pair> q=new LinkedList<pair>();
        TreeMap<Integer,Integer> map=new TreeMap<>();
        q.add(new pair(root,0));
        while(!q.isEmpty()){
            pair rem=q.remove();
            int i1=rem.ind;
            if(!map.containsKey(i1)){
                map.put(i1,rem.node.data);
            }
            if(rem.node.left!=null){
                q.add(new pair(rem.node.left,i1-1));
            }
            if(rem.node.right!=null){
                q.add(new pair(rem.node.right,i1+1));
            }
        }
        ArrayList<Integer> arr=new ArrayList<>();
        for(Map.Entry<Integer,Integer> entry: map.entrySet()){
            arr.add(entry.getValue());
        }
        return arr;
    }
}
